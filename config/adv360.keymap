/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp EQUAL                 &kp N1      &kp N2       &kp N3      &kp N4        &kp N5  &tog 1                                                                                               &mo 3        &kp N6  &kp N7        &kp N8      &kp N9       &kp N0         &kp MINUS
&kp CAPSLOCK              &kp Q       &kp W        &kp E       &kp R         &kp T   &none                                                                                                &none        &kp Y   &kp U         &kp I       &kp O        &kp P          &kp BSLH
&mt LS(LA(LCTRL)) ESCAPE  &mt LALT A  &mt LCTRL S  &mt LGUI D  &mt LSHIFT F  &kp G   &none            &kp LALT       &kp HOME              &kp END            &kp LALT                    &none        &kp H   &mt RSHIFT J  &mt RGUI K  &mt RCTRL L  &mt RALT SEMI  &kp SQT
&kp LSHIFT                &kp Z       &kp X        &kp C       &kp V         &kp B                                   &kp LEFT_COMMAND      &kp RIGHT_COMMAND                                           &kp N   &kp M         &kp COMMA   &kp DOT      &kp FSLH       &kp RSHFT
&mo 2                     &kp GRAVE   &kp CAPS     &kp LEFT    &kp RIGHT             &lt 1 BACKSPACE  &mt LCTRL TAB  &kp LCTRL             &kp RCTRL          &mt LS(LA(LC(LGUI))) ENTER  &lt 2 SPACE          &kp UP        &kp DOWN    &kp LBKT     &kp RBKT       &mo 2
            >;
        };

        layer_keypad {
            bindings = <
&kp TILDE  &kp F1           &kp F2            &kp F3             &kp F4                &kp F5                 &trans                                                   &mo 3      &kp F6           &kp F7           &kp F8           &kp F9        &kp F10        &kp F11
&kp GRAVE  &kp EXCLAMATION  &kp AT_SIGN       &kp POUND          &kp DOLLAR            &kp PERCENT            &none                                                    &none      &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &kp KP_MINUS  &kp KP_DIVIDE  &kp F12
&kp ESC    &kp CARET        &kp AMPERSAND     &kp ASTERISK       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none     &kp LCTRL  &kp LALT      &kp LGUI   &kp RCTRL  &none      &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp KP_PLUS   &kp ASTERISK   &kp SQT
&kp LSHFT  &kp Z            &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE        &kp RIGHT_BRACE                             &kp HOME      &kp PG_UP                        &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_DOT    &kp KP_EQUAL   &kp KP_ENTER
&mo 2      &kp GRAVE        &kp CAPS          &kp LEFT           &kp RIGHT                                    &kp BSPC  &kp DEL    &kp END       &kp PG_DN  &kp ENTER  &kp KP_N0                   &kp UP           &kp DOWN         &none         &none          &none
            >;
        };

        layer_fn {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6  &tog 1                                      &mo 3   &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans  &none                                       &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans  &none   &trans  &trans      &trans  &trans  &none   &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                  &trans      &trans                  &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans      &trans  &trans  &trans          &trans  &trans  &trans   &trans   &trans
            >;
        };

        layer_mod {
            bindings = <
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &trans                  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader             &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &rgb_ug RGB_MEFS_CMD 5  &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &macro_ver    &none                             &none      &none                                           &none  &none       &none       &none  &none  &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG                &bl BL_INC  &bl BL_DEC  &none  &none  &none
            >;
        };
    };
};
